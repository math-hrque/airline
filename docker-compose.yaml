services:
  # DATABASES
  mongo-db:
    image: mongo
    container_name: mongo-db
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    networks:
      - company-network

  postgres-db:
      image: postgres
      container_name: postgres-db
      ports:
        - "5433:5432"
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        # POSTGRES_DB: cliente
      volumes:
        - ./init-db:/docker-entrypoint-initdb.d
      networks:
        - company-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    networks:
      - company-network

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=redis
    command: ["redis-server", "--requirepass", "redis"]
    networks:
      - company-network

  # MICROSERVICES
  # ms-cliente:
  #   container_name: ms-cliente
  #   build:
  #     context: ./ms-cliente/cliente
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - postgres-db
  #     - rabbitmq
  #     - redis
  #   networks:
  #     - company-network
  
  # ms-auth:
  #   container_name: ms-auth
  #   build:
  #     context: ./ms-auth/auth
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - mongo-db
  #     - rabbitmq
  #     - redis
  #   networks:
  #     - company-network
  
  # ms-funcionario:
  #   container_name: ms-funcionario
  #   build:
  #     context: ./ms-funcionario/funcionario
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8082:8082"
  #   depends_on:
  #     - postgres-db
  #     - rabbitmq
  #     - redis
  #   networks:
  #     - company-network

  # ms-reserva:
  #   container_name: ms-reserva
  #   build:
  #     context: ./ms-reserva/reserva
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8083:8083"
  #   depends_on:
  #     - postgres-db
  #     - rabbitmq
  #     - redis
  #   networks:
  #     - company-network

  # ms-voos:
  #   container_name: ms-voos
  #   build:
  #     context: ./ms-voos/voos
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8084:8084"
  #   depends_on:
  #     - postgres-db
  #     - rabbitmq
  #     - redis
  #   networks:
  #     - company-network

  # saga:
  #   container_name: saga
  #   build:
  #     context: ./saga/saga
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8085:8085"
  #   depends_on:
  #     - postgres-db
  #     - rabbitmq
  #   networks:
  #     - company-network

networks:
  company-network:
    driver: bridge
