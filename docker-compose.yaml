services:

  mongo-db:
    image: mongo
    container_name: mongo-db
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    networks:
      - company-network

  postgres-db:
    image: postgres
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cliente
    ports:
      - "5433:5432"
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - company-network

  # ms-auth:
  #   container_name: ms-auth
  #   build:
  #     context: ./ms-auth/auth
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - mongo-db
  #   environment:
  #     - SPRING_DATA_MONGODB_URI=mongodb://mongo-db:27017/auth
  #   networks:
  #     - company-network

  # ms-cliente:
  #   container_name: ms-cliente
  #   build:
  #     context: ./ms-cliente/cliente
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8081:8080"
  #   depends_on:
  #     - cliente-db
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://cliente-db:5432/cliente
  #     - SPRING_DATASOURCE_USERNAME=postgres
  #     - SPRING_DATASOURCE_PASSWORD=postgres
  #     - DB_HOST=cliente-db
  #     - DB_PORT=5432
  #     - DB_USER=postgres
  #     - DB_PASSWORD=postgres
  #     - DB_NAME=cliente
  #   networks:
  #     - company-network

networks:
  company-network:
    driver: bridge
